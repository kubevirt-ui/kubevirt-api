/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiResourceV1alpha3OpaqueDeviceConfiguration,
    IoK8sApiResourceV1alpha3OpaqueDeviceConfigurationFromJSON,
    IoK8sApiResourceV1alpha3OpaqueDeviceConfigurationFromJSONTyped,
    IoK8sApiResourceV1alpha3OpaqueDeviceConfigurationToJSON,
} from './';

/**
 * DeviceClaimConfiguration is used for configuration parameters in DeviceClaim.
 * @export
 * @interface IoK8sApiResourceV1alpha3DeviceClaimConfiguration
 */
export interface IoK8sApiResourceV1alpha3DeviceClaimConfiguration {
    /**
     * 
     * @type {IoK8sApiResourceV1alpha3OpaqueDeviceConfiguration}
     * @memberof IoK8sApiResourceV1alpha3DeviceClaimConfiguration
     */
    opaque?: IoK8sApiResourceV1alpha3OpaqueDeviceConfiguration;
    /**
     * Requests lists the names of requests where the configuration applies. If empty, it applies to all requests.
     * 
     * References to subrequests must include the name of the main request and may include the subrequest using the format <main request>[/<subrequest>]. If just the main request is given, the configuration applies to all subrequests.
     * @type {Array<string>}
     * @memberof IoK8sApiResourceV1alpha3DeviceClaimConfiguration
     */
    requests?: Array<string>;
}

export function IoK8sApiResourceV1alpha3DeviceClaimConfigurationFromJSON(json: any): IoK8sApiResourceV1alpha3DeviceClaimConfiguration {
    return IoK8sApiResourceV1alpha3DeviceClaimConfigurationFromJSONTyped(json, false);
}

export function IoK8sApiResourceV1alpha3DeviceClaimConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiResourceV1alpha3DeviceClaimConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'opaque': !exists(json, 'opaque') ? undefined : IoK8sApiResourceV1alpha3OpaqueDeviceConfigurationFromJSON(json['opaque']),
        'requests': !exists(json, 'requests') ? undefined : json['requests'],
    };
}

export function IoK8sApiResourceV1alpha3DeviceClaimConfigurationToJSON(value?: IoK8sApiResourceV1alpha3DeviceClaimConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'opaque': IoK8sApiResourceV1alpha3OpaqueDeviceConfigurationToJSON(value.opaque),
        'requests': value.requests,
    };
}

