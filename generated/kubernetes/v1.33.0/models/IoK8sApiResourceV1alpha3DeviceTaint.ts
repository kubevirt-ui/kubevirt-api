/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The device this taint is attached to has the "effect" on any claim which does not tolerate the taint and, through the claim, to pods using the claim.
 * @export
 * @interface IoK8sApiResourceV1alpha3DeviceTaint
 */
export interface IoK8sApiResourceV1alpha3DeviceTaint {
    /**
     * The effect of the taint on claims that do not tolerate the taint and through such claims on the pods using them. Valid effects are NoSchedule and NoExecute. PreferNoSchedule as used for nodes is not valid here.
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha3DeviceTaint
     */
    effect: string;
    /**
     * The taint key to be applied to a device. Must be a label name.
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha3DeviceTaint
     */
    key: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha3DeviceTaint
     */
    timeAdded?: string;
    /**
     * The taint value corresponding to the taint key. Must be a label value.
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha3DeviceTaint
     */
    value?: string;
}

export function IoK8sApiResourceV1alpha3DeviceTaintFromJSON(json: any): IoK8sApiResourceV1alpha3DeviceTaint {
    return IoK8sApiResourceV1alpha3DeviceTaintFromJSONTyped(json, false);
}

export function IoK8sApiResourceV1alpha3DeviceTaintFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiResourceV1alpha3DeviceTaint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'effect': json['effect'],
        'key': json['key'],
        'timeAdded': !exists(json, 'timeAdded') ? undefined : (new Date(json['timeAdded'])),
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function IoK8sApiResourceV1alpha3DeviceTaintToJSON(value?: IoK8sApiResourceV1alpha3DeviceTaint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'effect': value.effect,
        'key': value.key,
        'timeAdded': value.timeAdded === undefined ? undefined : (value.timeAdded.toISOString()),
        'value': value.value,
    };
}

