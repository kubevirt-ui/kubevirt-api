/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NodeNetworkConfigurationPolicySpec,
    NodeNetworkConfigurationPolicySpecFromJSON,
    NodeNetworkConfigurationPolicySpecFromJSONTyped,
    NodeNetworkConfigurationPolicySpecToJSON,
    NodeNetworkConfigurationPolicyStatus,
    NodeNetworkConfigurationPolicyStatusFromJSON,
    NodeNetworkConfigurationPolicyStatusFromJSONTyped,
    NodeNetworkConfigurationPolicyStatusToJSON,
} from './';

/**
 * NodeNetworkConfigurationPolicy is the Schema for the nodenetworkconfigurationpolicies API
 * @export
 * @interface NodeNetworkConfigurationPolicy
 */
export interface NodeNetworkConfigurationPolicy {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof NodeNetworkConfigurationPolicy
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof NodeNetworkConfigurationPolicy
     */
    kind?: string;
    /**
     * 
     * @type {object}
     * @memberof NodeNetworkConfigurationPolicy
     */
    metadata?: object;
    /**
     * 
     * @type {NodeNetworkConfigurationPolicySpec}
     * @memberof NodeNetworkConfigurationPolicy
     */
    spec?: NodeNetworkConfigurationPolicySpec;
    /**
     * 
     * @type {NodeNetworkConfigurationPolicyStatus}
     * @memberof NodeNetworkConfigurationPolicy
     */
    status?: NodeNetworkConfigurationPolicyStatus;
}

export function NodeNetworkConfigurationPolicyFromJSON(json: any): NodeNetworkConfigurationPolicy {
    return NodeNetworkConfigurationPolicyFromJSONTyped(json, false);
}

export function NodeNetworkConfigurationPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeNetworkConfigurationPolicy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'spec': !exists(json, 'spec') ? undefined : NodeNetworkConfigurationPolicySpecFromJSON(json['spec']),
        'status': !exists(json, 'status') ? undefined : NodeNetworkConfigurationPolicyStatusFromJSON(json['status']),
    };
}

export function NodeNetworkConfigurationPolicyToJSON(value?: NodeNetworkConfigurationPolicy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'kind': value.kind,
        'metadata': value.metadata,
        'spec': NodeNetworkConfigurationPolicySpecToJSON(value.spec),
        'status': NodeNetworkConfigurationPolicyStatusToJSON(value.status),
    };
}

