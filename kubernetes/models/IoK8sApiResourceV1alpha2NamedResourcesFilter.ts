/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * NamedResourcesFilter is used in ResourceFilterModel.
 * @export
 * @interface IoK8sApiResourceV1alpha2NamedResourcesFilter
 */
export interface IoK8sApiResourceV1alpha2NamedResourcesFilter {
    /**
     * Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
     * 
     * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
     * 
     *    attributes.quantity["a"].isGreaterThan(quantity("0")) &&
     *    attributes.stringslice["b"].isSorted()
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha2NamedResourcesFilter
     */
    selector: string;
}

export function IoK8sApiResourceV1alpha2NamedResourcesFilterFromJSON(json: any): IoK8sApiResourceV1alpha2NamedResourcesFilter {
    return IoK8sApiResourceV1alpha2NamedResourcesFilterFromJSONTyped(json, false);
}

export function IoK8sApiResourceV1alpha2NamedResourcesFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiResourceV1alpha2NamedResourcesFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'selector': json['selector'],
    };
}

export function IoK8sApiResourceV1alpha2NamedResourcesFilterToJSON(value?: IoK8sApiResourceV1alpha2NamedResourcesFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'selector': value.selector,
    };
}

