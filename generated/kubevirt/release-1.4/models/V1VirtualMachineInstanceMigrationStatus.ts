/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1VirtualMachineInstanceMigrationCondition,
    V1VirtualMachineInstanceMigrationConditionFromJSON,
    V1VirtualMachineInstanceMigrationConditionFromJSONTyped,
    V1VirtualMachineInstanceMigrationConditionToJSON,
    V1VirtualMachineInstanceMigrationPhaseTransitionTimestamp,
    V1VirtualMachineInstanceMigrationPhaseTransitionTimestampFromJSON,
    V1VirtualMachineInstanceMigrationPhaseTransitionTimestampFromJSONTyped,
    V1VirtualMachineInstanceMigrationPhaseTransitionTimestampToJSON,
    V1VirtualMachineInstanceMigrationState,
    V1VirtualMachineInstanceMigrationStateFromJSON,
    V1VirtualMachineInstanceMigrationStateFromJSONTyped,
    V1VirtualMachineInstanceMigrationStateToJSON,
} from './';

/**
 * VirtualMachineInstanceMigration reprents information pertaining to a VMI's migration.
 * @export
 * @interface V1VirtualMachineInstanceMigrationStatus
 */
export interface V1VirtualMachineInstanceMigrationStatus {
    /**
     * 
     * @type {Array<V1VirtualMachineInstanceMigrationCondition>}
     * @memberof V1VirtualMachineInstanceMigrationStatus
     */
    conditions?: Array<V1VirtualMachineInstanceMigrationCondition>;
    /**
     * 
     * @type {V1VirtualMachineInstanceMigrationState}
     * @memberof V1VirtualMachineInstanceMigrationStatus
     */
    migrationState?: V1VirtualMachineInstanceMigrationState;
    /**
     * 
     * @type {string}
     * @memberof V1VirtualMachineInstanceMigrationStatus
     */
    phase?: string;
    /**
     * PhaseTransitionTimestamp is the timestamp of when the last phase change occurred
     * @type {Array<V1VirtualMachineInstanceMigrationPhaseTransitionTimestamp>}
     * @memberof V1VirtualMachineInstanceMigrationStatus
     */
    phaseTransitionTimestamps?: Array<V1VirtualMachineInstanceMigrationPhaseTransitionTimestamp>;
}

export function V1VirtualMachineInstanceMigrationStatusFromJSON(json: any): V1VirtualMachineInstanceMigrationStatus {
    return V1VirtualMachineInstanceMigrationStatusFromJSONTyped(json, false);
}

export function V1VirtualMachineInstanceMigrationStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1VirtualMachineInstanceMigrationStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(V1VirtualMachineInstanceMigrationConditionFromJSON)),
        'migrationState': !exists(json, 'migrationState') ? undefined : V1VirtualMachineInstanceMigrationStateFromJSON(json['migrationState']),
        'phase': !exists(json, 'phase') ? undefined : json['phase'],
        'phaseTransitionTimestamps': !exists(json, 'phaseTransitionTimestamps') ? undefined : ((json['phaseTransitionTimestamps'] as Array<any>).map(V1VirtualMachineInstanceMigrationPhaseTransitionTimestampFromJSON)),
    };
}

export function V1VirtualMachineInstanceMigrationStatusToJSON(value?: V1VirtualMachineInstanceMigrationStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(V1VirtualMachineInstanceMigrationConditionToJSON)),
        'migrationState': V1VirtualMachineInstanceMigrationStateToJSON(value.migrationState),
        'phase': value.phase,
        'phaseTransitionTimestamps': value.phaseTransitionTimestamps === undefined ? undefined : ((value.phaseTransitionTimestamps as Array<any>).map(V1VirtualMachineInstanceMigrationPhaseTransitionTimestampToJSON)),
    };
}

