/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiCoreV1NodeSelector,
    IoK8sApiCoreV1NodeSelectorFromJSON,
    IoK8sApiCoreV1NodeSelectorFromJSONTyped,
    IoK8sApiCoreV1NodeSelectorToJSON,
    IoK8sApiCoreV1PreferredSchedulingTerm,
    IoK8sApiCoreV1PreferredSchedulingTermFromJSON,
    IoK8sApiCoreV1PreferredSchedulingTermFromJSONTyped,
    IoK8sApiCoreV1PreferredSchedulingTermToJSON,
} from './';

/**
 * Node affinity is a group of node affinity scheduling rules.
 * @export
 * @interface IoK8sApiCoreV1NodeAffinity
 */
export interface IoK8sApiCoreV1NodeAffinity {
    /**
     * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     * @type {Array<IoK8sApiCoreV1PreferredSchedulingTerm>}
     * @memberof IoK8sApiCoreV1NodeAffinity
     */
    preferredDuringSchedulingIgnoredDuringExecution?: Array<IoK8sApiCoreV1PreferredSchedulingTerm>;
    /**
     * 
     * @type {IoK8sApiCoreV1NodeSelector}
     * @memberof IoK8sApiCoreV1NodeAffinity
     */
    requiredDuringSchedulingIgnoredDuringExecution?: IoK8sApiCoreV1NodeSelector;
}

export function IoK8sApiCoreV1NodeAffinityFromJSON(json: any): IoK8sApiCoreV1NodeAffinity {
    return IoK8sApiCoreV1NodeAffinityFromJSONTyped(json, false);
}

export function IoK8sApiCoreV1NodeAffinityFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiCoreV1NodeAffinity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'preferredDuringSchedulingIgnoredDuringExecution': !exists(json, 'preferredDuringSchedulingIgnoredDuringExecution') ? undefined : ((json['preferredDuringSchedulingIgnoredDuringExecution'] as Array<any>).map(IoK8sApiCoreV1PreferredSchedulingTermFromJSON)),
        'requiredDuringSchedulingIgnoredDuringExecution': !exists(json, 'requiredDuringSchedulingIgnoredDuringExecution') ? undefined : IoK8sApiCoreV1NodeSelectorFromJSON(json['requiredDuringSchedulingIgnoredDuringExecution']),
    };
}

export function IoK8sApiCoreV1NodeAffinityToJSON(value?: IoK8sApiCoreV1NodeAffinity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'preferredDuringSchedulingIgnoredDuringExecution': value.preferredDuringSchedulingIgnoredDuringExecution === undefined ? undefined : ((value.preferredDuringSchedulingIgnoredDuringExecution as Array<any>).map(IoK8sApiCoreV1PreferredSchedulingTermToJSON)),
        'requiredDuringSchedulingIgnoredDuringExecution': IoK8sApiCoreV1NodeSelectorToJSON(value.requiredDuringSchedulingIgnoredDuringExecution),
    };
}

