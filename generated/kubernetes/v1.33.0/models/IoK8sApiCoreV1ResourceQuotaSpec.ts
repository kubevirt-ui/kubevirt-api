/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiCoreV1ScopeSelector,
    IoK8sApiCoreV1ScopeSelectorFromJSON,
    IoK8sApiCoreV1ScopeSelectorFromJSONTyped,
    IoK8sApiCoreV1ScopeSelectorToJSON,
} from './';

/**
 * ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
 * @export
 * @interface IoK8sApiCoreV1ResourceQuotaSpec
 */
export interface IoK8sApiCoreV1ResourceQuotaSpec {
    /**
     * hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
     * @type {{ [key: string]: string; }}
     * @memberof IoK8sApiCoreV1ResourceQuotaSpec
     */
    hard?: { [key: string]: string; };
    /**
     * 
     * @type {IoK8sApiCoreV1ScopeSelector}
     * @memberof IoK8sApiCoreV1ResourceQuotaSpec
     */
    scopeSelector?: IoK8sApiCoreV1ScopeSelector;
    /**
     * A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1ResourceQuotaSpec
     */
    scopes?: Array<string>;
}

export function IoK8sApiCoreV1ResourceQuotaSpecFromJSON(json: any): IoK8sApiCoreV1ResourceQuotaSpec {
    return IoK8sApiCoreV1ResourceQuotaSpecFromJSONTyped(json, false);
}

export function IoK8sApiCoreV1ResourceQuotaSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiCoreV1ResourceQuotaSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hard': !exists(json, 'hard') ? undefined : json['hard'],
        'scopeSelector': !exists(json, 'scopeSelector') ? undefined : IoK8sApiCoreV1ScopeSelectorFromJSON(json['scopeSelector']),
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
    };
}

export function IoK8sApiCoreV1ResourceQuotaSpecToJSON(value?: IoK8sApiCoreV1ResourceQuotaSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hard': value.hard,
        'scopeSelector': IoK8sApiCoreV1ScopeSelectorToJSON(value.scopeSelector),
        'scopes': value.scopes,
    };
}

