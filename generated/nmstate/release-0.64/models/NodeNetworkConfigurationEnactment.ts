/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NodeNetworkConfigurationEnactmentStatus,
    NodeNetworkConfigurationEnactmentStatusFromJSON,
    NodeNetworkConfigurationEnactmentStatusFromJSONTyped,
    NodeNetworkConfigurationEnactmentStatusToJSON,
} from './';

/**
 * NodeNetworkConfigurationEnactment is the Schema for the nodenetworkconfigurationenactments API
 * @export
 * @interface NodeNetworkConfigurationEnactment
 */
export interface NodeNetworkConfigurationEnactment {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof NodeNetworkConfigurationEnactment
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof NodeNetworkConfigurationEnactment
     */
    kind?: string;
    /**
     * 
     * @type {object}
     * @memberof NodeNetworkConfigurationEnactment
     */
    metadata?: object;
    /**
     * 
     * @type {NodeNetworkConfigurationEnactmentStatus}
     * @memberof NodeNetworkConfigurationEnactment
     */
    status?: NodeNetworkConfigurationEnactmentStatus;
}

export function NodeNetworkConfigurationEnactmentFromJSON(json: any): NodeNetworkConfigurationEnactment {
    return NodeNetworkConfigurationEnactmentFromJSONTyped(json, false);
}

export function NodeNetworkConfigurationEnactmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeNetworkConfigurationEnactment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'status': !exists(json, 'status') ? undefined : NodeNetworkConfigurationEnactmentStatusFromJSON(json['status']),
    };
}

export function NodeNetworkConfigurationEnactmentToJSON(value?: NodeNetworkConfigurationEnactment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'kind': value.kind,
        'metadata': value.metadata,
        'status': NodeNetworkConfigurationEnactmentStatusToJSON(value.status),
    };
}

