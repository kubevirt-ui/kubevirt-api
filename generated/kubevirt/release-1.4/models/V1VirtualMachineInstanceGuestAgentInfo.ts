/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1GuestAgentCommandInfo,
    V1GuestAgentCommandInfoFromJSON,
    V1GuestAgentCommandInfoFromJSONTyped,
    V1GuestAgentCommandInfoToJSON,
    V1VirtualMachineInstanceFileSystemInfo,
    V1VirtualMachineInstanceFileSystemInfoFromJSON,
    V1VirtualMachineInstanceFileSystemInfoFromJSONTyped,
    V1VirtualMachineInstanceFileSystemInfoToJSON,
    V1VirtualMachineInstanceGuestOSInfo,
    V1VirtualMachineInstanceGuestOSInfoFromJSON,
    V1VirtualMachineInstanceGuestOSInfoFromJSONTyped,
    V1VirtualMachineInstanceGuestOSInfoToJSON,
    V1VirtualMachineInstanceGuestOSUser,
    V1VirtualMachineInstanceGuestOSUserFromJSON,
    V1VirtualMachineInstanceGuestOSUserFromJSONTyped,
    V1VirtualMachineInstanceGuestOSUserToJSON,
} from './';

/**
 * VirtualMachineInstanceGuestAgentInfo represents information from the installed guest agent
 * @export
 * @interface V1VirtualMachineInstanceGuestAgentInfo
 */
export interface V1VirtualMachineInstanceGuestAgentInfo {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    apiVersion?: string;
    /**
     * FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    fsFreezeStatus?: string;
    /**
     * 
     * @type {V1VirtualMachineInstanceFileSystemInfo}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    fsInfo?: V1VirtualMachineInstanceFileSystemInfo;
    /**
     * GAVersion is a version of currently installed guest agent
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    guestAgentVersion?: string;
    /**
     * Hostname represents FQDN of a guest
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    hostname?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    kind?: string;
    /**
     * 
     * @type {V1VirtualMachineInstanceGuestOSInfo}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    os?: V1VirtualMachineInstanceGuestOSInfo;
    /**
     * Return command list the guest agent supports
     * @type {Array<V1GuestAgentCommandInfo>}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    supportedCommands?: Array<V1GuestAgentCommandInfo>;
    /**
     * Timezone is guest os current timezone
     * @type {string}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    timezone?: string;
    /**
     * UserList is a list of active guest OS users
     * @type {Array<V1VirtualMachineInstanceGuestOSUser>}
     * @memberof V1VirtualMachineInstanceGuestAgentInfo
     */
    userList?: Array<V1VirtualMachineInstanceGuestOSUser>;
}

export function V1VirtualMachineInstanceGuestAgentInfoFromJSON(json: any): V1VirtualMachineInstanceGuestAgentInfo {
    return V1VirtualMachineInstanceGuestAgentInfoFromJSONTyped(json, false);
}

export function V1VirtualMachineInstanceGuestAgentInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1VirtualMachineInstanceGuestAgentInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'fsFreezeStatus': !exists(json, 'fsFreezeStatus') ? undefined : json['fsFreezeStatus'],
        'fsInfo': !exists(json, 'fsInfo') ? undefined : V1VirtualMachineInstanceFileSystemInfoFromJSON(json['fsInfo']),
        'guestAgentVersion': !exists(json, 'guestAgentVersion') ? undefined : json['guestAgentVersion'],
        'hostname': !exists(json, 'hostname') ? undefined : json['hostname'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'os': !exists(json, 'os') ? undefined : V1VirtualMachineInstanceGuestOSInfoFromJSON(json['os']),
        'supportedCommands': !exists(json, 'supportedCommands') ? undefined : ((json['supportedCommands'] as Array<any>).map(V1GuestAgentCommandInfoFromJSON)),
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'userList': !exists(json, 'userList') ? undefined : ((json['userList'] as Array<any>).map(V1VirtualMachineInstanceGuestOSUserFromJSON)),
    };
}

export function V1VirtualMachineInstanceGuestAgentInfoToJSON(value?: V1VirtualMachineInstanceGuestAgentInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'fsFreezeStatus': value.fsFreezeStatus,
        'fsInfo': V1VirtualMachineInstanceFileSystemInfoToJSON(value.fsInfo),
        'guestAgentVersion': value.guestAgentVersion,
        'hostname': value.hostname,
        'kind': value.kind,
        'os': V1VirtualMachineInstanceGuestOSInfoToJSON(value.os),
        'supportedCommands': value.supportedCommands === undefined ? undefined : ((value.supportedCommands as Array<any>).map(V1GuestAgentCommandInfoToJSON)),
        'timezone': value.timezone,
        'userList': value.userList === undefined ? undefined : ((value.userList as Array<any>).map(V1VirtualMachineInstanceGuestOSUserToJSON)),
    };
}

