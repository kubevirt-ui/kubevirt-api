/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * PodResourceClaim references exactly one ResourceClaim, either directly or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim for the pod.
 * 
 * It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.
 * @export
 * @interface K8sIoApiCoreV1PodResourceClaim
 */
export interface K8sIoApiCoreV1PodResourceClaim {
    /**
     * Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.
     * @type {string}
     * @memberof K8sIoApiCoreV1PodResourceClaim
     */
    name: string;
    /**
     * ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.
     * 
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     * @type {string}
     * @memberof K8sIoApiCoreV1PodResourceClaim
     */
    resourceClaimName?: string;
    /**
     * ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.
     * 
     * The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
     * 
     * This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.
     * 
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     * @type {string}
     * @memberof K8sIoApiCoreV1PodResourceClaim
     */
    resourceClaimTemplateName?: string;
}

export function K8sIoApiCoreV1PodResourceClaimFromJSON(json: any): K8sIoApiCoreV1PodResourceClaim {
    return K8sIoApiCoreV1PodResourceClaimFromJSONTyped(json, false);
}

export function K8sIoApiCoreV1PodResourceClaimFromJSONTyped(json: any, ignoreDiscriminator: boolean): K8sIoApiCoreV1PodResourceClaim {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'resourceClaimName': !exists(json, 'resourceClaimName') ? undefined : json['resourceClaimName'],
        'resourceClaimTemplateName': !exists(json, 'resourceClaimTemplateName') ? undefined : json['resourceClaimTemplateName'],
    };
}

export function K8sIoApiCoreV1PodResourceClaimToJSON(value?: K8sIoApiCoreV1PodResourceClaim | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'resourceClaimName': value.resourceClaimName,
        'resourceClaimTemplateName': value.resourceClaimTemplateName,
    };
}

