/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NodeNetworkConfigurationEnactmentStatusMetaInfo,
    NodeNetworkConfigurationEnactmentStatusMetaInfoFromJSON,
    NodeNetworkConfigurationEnactmentStatusMetaInfoFromJSONTyped,
    NodeNetworkConfigurationEnactmentStatusMetaInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface NodeNetworkConfigurationEnactmentStatusCapturedStates
 */
export interface NodeNetworkConfigurationEnactmentStatusCapturedStates {
    /**
     * 
     * @type {NodeNetworkConfigurationEnactmentStatusMetaInfo}
     * @memberof NodeNetworkConfigurationEnactmentStatusCapturedStates
     */
    metaInfo?: NodeNetworkConfigurationEnactmentStatusMetaInfo;
    /**
     * State contains the namestatectl yaml [1] as string instead of golang struct so we don't need to be in sync with the schema. 
     *  [1] https://github.com/nmstate/nmstate/blob/base/libnmstate/schemas/operational-state.yaml
     * @type {object}
     * @memberof NodeNetworkConfigurationEnactmentStatusCapturedStates
     */
    state?: object;
}

export function NodeNetworkConfigurationEnactmentStatusCapturedStatesFromJSON(json: any): NodeNetworkConfigurationEnactmentStatusCapturedStates {
    return NodeNetworkConfigurationEnactmentStatusCapturedStatesFromJSONTyped(json, false);
}

export function NodeNetworkConfigurationEnactmentStatusCapturedStatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeNetworkConfigurationEnactmentStatusCapturedStates {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metaInfo': !exists(json, 'metaInfo') ? undefined : NodeNetworkConfigurationEnactmentStatusMetaInfoFromJSON(json['metaInfo']),
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function NodeNetworkConfigurationEnactmentStatusCapturedStatesToJSON(value?: NodeNetworkConfigurationEnactmentStatusCapturedStates | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metaInfo': NodeNetworkConfigurationEnactmentStatusMetaInfoToJSON(value.metaInfo),
        'state': value.state,
    };
}

