/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * LogVerbosity sets log verbosity level of  various components
 * @export
 * @interface V1LogVerbosity
 */
export interface V1LogVerbosity {
    /**
     * NodeVerbosity represents a map of nodes with a specific verbosity level
     * @type {{ [key: string]: number; }}
     * @memberof V1LogVerbosity
     */
    nodeVerbosity?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof V1LogVerbosity
     */
    virtAPI?: number;
    /**
     * 
     * @type {number}
     * @memberof V1LogVerbosity
     */
    virtController?: number;
    /**
     * 
     * @type {number}
     * @memberof V1LogVerbosity
     */
    virtHandler?: number;
    /**
     * 
     * @type {number}
     * @memberof V1LogVerbosity
     */
    virtLauncher?: number;
    /**
     * 
     * @type {number}
     * @memberof V1LogVerbosity
     */
    virtOperator?: number;
}

export function V1LogVerbosityFromJSON(json: any): V1LogVerbosity {
    return V1LogVerbosityFromJSONTyped(json, false);
}

export function V1LogVerbosityFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1LogVerbosity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nodeVerbosity': !exists(json, 'nodeVerbosity') ? undefined : json['nodeVerbosity'],
        'virtAPI': !exists(json, 'virtAPI') ? undefined : json['virtAPI'],
        'virtController': !exists(json, 'virtController') ? undefined : json['virtController'],
        'virtHandler': !exists(json, 'virtHandler') ? undefined : json['virtHandler'],
        'virtLauncher': !exists(json, 'virtLauncher') ? undefined : json['virtLauncher'],
        'virtOperator': !exists(json, 'virtOperator') ? undefined : json['virtOperator'],
    };
}

export function V1LogVerbosityToJSON(value?: V1LogVerbosity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nodeVerbosity': value.nodeVerbosity,
        'virtAPI': value.virtAPI,
        'virtController': value.virtController,
        'virtHandler': value.virtHandler,
        'virtLauncher': value.virtLauncher,
        'virtOperator': value.virtOperator,
    };
}

