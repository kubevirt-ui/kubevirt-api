/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * ParentReference describes a reference to a parent object.
 * @export
 * @interface IoK8sApiNetworkingV1ParentReference
 */
export interface IoK8sApiNetworkingV1ParentReference {
  /**
   * Group is the group of the object being referenced.
   * @type {string}
   * @memberof IoK8sApiNetworkingV1ParentReference
   */
  group?: string;
  /**
   * Name is the name of the object being referenced.
   * @type {string}
   * @memberof IoK8sApiNetworkingV1ParentReference
   */
  name: string;
  /**
   * Namespace is the namespace of the object being referenced.
   * @type {string}
   * @memberof IoK8sApiNetworkingV1ParentReference
   */
  namespace?: string;
  /**
   * Resource is the resource of the object being referenced.
   * @type {string}
   * @memberof IoK8sApiNetworkingV1ParentReference
   */
  resource: string;
}

export function IoK8sApiNetworkingV1ParentReferenceFromJSON(
  json: any,
): IoK8sApiNetworkingV1ParentReference {
  return IoK8sApiNetworkingV1ParentReferenceFromJSONTyped(json, false);
}

export function IoK8sApiNetworkingV1ParentReferenceFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): IoK8sApiNetworkingV1ParentReference {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    group: !exists(json, 'group') ? undefined : json['group'],
    name: json['name'],
    namespace: !exists(json, 'namespace') ? undefined : json['namespace'],
    resource: json['resource'],
  };
}

export function IoK8sApiNetworkingV1ParentReferenceToJSON(
  value?: IoK8sApiNetworkingV1ParentReference | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    group: value.group,
    name: value.name,
    namespace: value.namespace,
    resource: value.resource,
  };
}
