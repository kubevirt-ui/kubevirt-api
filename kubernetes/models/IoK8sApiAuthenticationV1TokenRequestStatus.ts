/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * TokenRequestStatus is the result of a token request.
 * @export
 * @interface IoK8sApiAuthenticationV1TokenRequestStatus
 */
export interface IoK8sApiAuthenticationV1TokenRequestStatus {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof IoK8sApiAuthenticationV1TokenRequestStatus
     */
    expirationTimestamp: string;
    /**
     * Token is the opaque bearer token.
     * @type {string}
     * @memberof IoK8sApiAuthenticationV1TokenRequestStatus
     */
    token: string;
}

export function IoK8sApiAuthenticationV1TokenRequestStatusFromJSON(json: any): IoK8sApiAuthenticationV1TokenRequestStatus {
    return IoK8sApiAuthenticationV1TokenRequestStatusFromJSONTyped(json, false);
}

export function IoK8sApiAuthenticationV1TokenRequestStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiAuthenticationV1TokenRequestStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expirationTimestamp': (new Date(json['expirationTimestamp'])),
        'token': json['token'],
    };
}

export function IoK8sApiAuthenticationV1TokenRequestStatusToJSON(value?: IoK8sApiAuthenticationV1TokenRequestStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expirationTimestamp': (value.expirationTimestamp.toISOString()),
        'token': value.token,
    };
}

