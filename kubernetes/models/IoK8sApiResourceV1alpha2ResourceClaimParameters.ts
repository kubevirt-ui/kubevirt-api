/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiResourceV1alpha2DriverRequests,
    IoK8sApiResourceV1alpha2DriverRequestsFromJSON,
    IoK8sApiResourceV1alpha2DriverRequestsFromJSONTyped,
    IoK8sApiResourceV1alpha2DriverRequestsToJSON,
    IoK8sApiResourceV1alpha2ResourceClaimParametersReference,
    IoK8sApiResourceV1alpha2ResourceClaimParametersReferenceFromJSON,
    IoK8sApiResourceV1alpha2ResourceClaimParametersReferenceFromJSONTyped,
    IoK8sApiResourceV1alpha2ResourceClaimParametersReferenceToJSON,
    IoK8sApimachineryPkgApisMetaV1ObjectMeta,
    IoK8sApimachineryPkgApisMetaV1ObjectMetaFromJSON,
    IoK8sApimachineryPkgApisMetaV1ObjectMetaFromJSONTyped,
    IoK8sApimachineryPkgApisMetaV1ObjectMetaToJSON,
} from './';

/**
 * ResourceClaimParameters defines resource requests for a ResourceClaim in an in-tree format understood by Kubernetes.
 * @export
 * @interface IoK8sApiResourceV1alpha2ResourceClaimParameters
 */
export interface IoK8sApiResourceV1alpha2ResourceClaimParameters {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    apiVersion?: string;
    /**
     * DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
     * 
     * May be empty, in which case the claim can always be allocated.
     * @type {Array<IoK8sApiResourceV1alpha2DriverRequests>}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    driverRequests?: Array<IoK8sApiResourceV1alpha2DriverRequests>;
    /**
     * 
     * @type {IoK8sApiResourceV1alpha2ResourceClaimParametersReference}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    generatedFrom?: IoK8sApiResourceV1alpha2ResourceClaimParametersReference;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    kind?: string;
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    metadata?: IoK8sApimachineryPkgApisMetaV1ObjectMeta;
    /**
     * Shareable indicates whether the allocated claim is meant to be shareable by multiple consumers at the same time.
     * @type {boolean}
     * @memberof IoK8sApiResourceV1alpha2ResourceClaimParameters
     */
    shareable?: boolean;
}

export function IoK8sApiResourceV1alpha2ResourceClaimParametersFromJSON(json: any): IoK8sApiResourceV1alpha2ResourceClaimParameters {
    return IoK8sApiResourceV1alpha2ResourceClaimParametersFromJSONTyped(json, false);
}

export function IoK8sApiResourceV1alpha2ResourceClaimParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiResourceV1alpha2ResourceClaimParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': !exists(json, 'apiVersion') ? undefined : json['apiVersion'],
        'driverRequests': !exists(json, 'driverRequests') ? undefined : ((json['driverRequests'] as Array<any>).map(IoK8sApiResourceV1alpha2DriverRequestsFromJSON)),
        'generatedFrom': !exists(json, 'generatedFrom') ? undefined : IoK8sApiResourceV1alpha2ResourceClaimParametersReferenceFromJSON(json['generatedFrom']),
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'metadata': !exists(json, 'metadata') ? undefined : IoK8sApimachineryPkgApisMetaV1ObjectMetaFromJSON(json['metadata']),
        'shareable': !exists(json, 'shareable') ? undefined : json['shareable'],
    };
}

export function IoK8sApiResourceV1alpha2ResourceClaimParametersToJSON(value?: IoK8sApiResourceV1alpha2ResourceClaimParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'driverRequests': value.driverRequests === undefined ? undefined : ((value.driverRequests as Array<any>).map(IoK8sApiResourceV1alpha2DriverRequestsToJSON)),
        'generatedFrom': IoK8sApiResourceV1alpha2ResourceClaimParametersReferenceToJSON(value.generatedFrom),
        'kind': value.kind,
        'metadata': IoK8sApimachineryPkgApisMetaV1ObjectMetaToJSON(value.metadata),
        'shareable': value.shareable,
    };
}

