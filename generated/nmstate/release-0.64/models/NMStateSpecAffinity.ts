/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NMStateSpecAffinityNodeAffinity,
    NMStateSpecAffinityNodeAffinityFromJSON,
    NMStateSpecAffinityNodeAffinityFromJSONTyped,
    NMStateSpecAffinityNodeAffinityToJSON,
    NMStateSpecAffinityPodAffinity,
    NMStateSpecAffinityPodAffinityFromJSON,
    NMStateSpecAffinityPodAffinityFromJSONTyped,
    NMStateSpecAffinityPodAffinityToJSON,
    NMStateSpecAffinityPodAntiAffinity,
    NMStateSpecAffinityPodAntiAffinityFromJSON,
    NMStateSpecAffinityPodAntiAffinityFromJSONTyped,
    NMStateSpecAffinityPodAntiAffinityToJSON,
} from './';

/**
 * Affinity is an optional affinity selector that will be added to handler DaemonSet manifest.
 * @export
 * @interface NMStateSpecAffinity
 */
export interface NMStateSpecAffinity {
    /**
     * 
     * @type {NMStateSpecAffinityNodeAffinity}
     * @memberof NMStateSpecAffinity
     */
    nodeAffinity?: NMStateSpecAffinityNodeAffinity;
    /**
     * 
     * @type {NMStateSpecAffinityPodAffinity}
     * @memberof NMStateSpecAffinity
     */
    podAffinity?: NMStateSpecAffinityPodAffinity;
    /**
     * 
     * @type {NMStateSpecAffinityPodAntiAffinity}
     * @memberof NMStateSpecAffinity
     */
    podAntiAffinity?: NMStateSpecAffinityPodAntiAffinity;
}

export function NMStateSpecAffinityFromJSON(json: any): NMStateSpecAffinity {
    return NMStateSpecAffinityFromJSONTyped(json, false);
}

export function NMStateSpecAffinityFromJSONTyped(json: any, ignoreDiscriminator: boolean): NMStateSpecAffinity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nodeAffinity': !exists(json, 'nodeAffinity') ? undefined : NMStateSpecAffinityNodeAffinityFromJSON(json['nodeAffinity']),
        'podAffinity': !exists(json, 'podAffinity') ? undefined : NMStateSpecAffinityPodAffinityFromJSON(json['podAffinity']),
        'podAntiAffinity': !exists(json, 'podAntiAffinity') ? undefined : NMStateSpecAffinityPodAntiAffinityFromJSON(json['podAntiAffinity']),
    };
}

export function NMStateSpecAffinityToJSON(value?: NMStateSpecAffinity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nodeAffinity': NMStateSpecAffinityNodeAffinityToJSON(value.nodeAffinity),
        'podAffinity': NMStateSpecAffinityPodAffinityToJSON(value.podAffinity),
        'podAntiAffinity': NMStateSpecAffinityPodAntiAffinityToJSON(value.podAntiAffinity),
    };
}

