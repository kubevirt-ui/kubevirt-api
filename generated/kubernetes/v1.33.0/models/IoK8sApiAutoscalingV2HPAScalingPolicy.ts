/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * HPAScalingPolicy is a single policy which must hold true for a specified past interval.
 * @export
 * @interface IoK8sApiAutoscalingV2HPAScalingPolicy
 */
export interface IoK8sApiAutoscalingV2HPAScalingPolicy {
    /**
     * periodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
     * @type {number}
     * @memberof IoK8sApiAutoscalingV2HPAScalingPolicy
     */
    periodSeconds: number;
    /**
     * type is used to specify the scaling policy.
     * @type {string}
     * @memberof IoK8sApiAutoscalingV2HPAScalingPolicy
     */
    type: string;
    /**
     * value contains the amount of change which is permitted by the policy. It must be greater than zero
     * @type {number}
     * @memberof IoK8sApiAutoscalingV2HPAScalingPolicy
     */
    value: number;
}

export function IoK8sApiAutoscalingV2HPAScalingPolicyFromJSON(json: any): IoK8sApiAutoscalingV2HPAScalingPolicy {
    return IoK8sApiAutoscalingV2HPAScalingPolicyFromJSONTyped(json, false);
}

export function IoK8sApiAutoscalingV2HPAScalingPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiAutoscalingV2HPAScalingPolicy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'periodSeconds': json['periodSeconds'],
        'type': json['type'],
        'value': json['value'],
    };
}

export function IoK8sApiAutoscalingV2HPAScalingPolicyToJSON(value?: IoK8sApiAutoscalingV2HPAScalingPolicy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'periodSeconds': value.periodSeconds,
        'type': value.type,
        'value': value.value,
    };
}

