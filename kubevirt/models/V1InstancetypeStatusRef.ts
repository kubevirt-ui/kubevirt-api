/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
  V1ControllerRevisionRef,
  V1ControllerRevisionRefFromJSON,
  V1ControllerRevisionRefToJSON,
} from './';

/**
 *
 * @export
 * @interface V1InstancetypeStatusRef
 */
export interface V1InstancetypeStatusRef {
  /**
   *
   * @type {V1ControllerRevisionRef}
   * @memberof V1InstancetypeStatusRef
   */
  controllerRevisionRef?: V1ControllerRevisionRef;
  /**
   * InferFromVolume lists the name of a volume that should be used to infer or discover the resource
   * @type {string}
   * @memberof V1InstancetypeStatusRef
   */
  inferFromVolume?: string;
  /**
   * InferFromVolumeFailurePolicy controls what should happen on failure when inferring the resource
   * @type {string}
   * @memberof V1InstancetypeStatusRef
   */
  inferFromVolumeFailurePolicy?: string;
  /**
   * Kind specifies the kind of resource
   * @type {string}
   * @memberof V1InstancetypeStatusRef
   */
  kind?: string;
  /**
   * Name is the name of resource
   * @type {string}
   * @memberof V1InstancetypeStatusRef
   */
  name?: string;
}

export function V1InstancetypeStatusRefFromJSON(json: any): V1InstancetypeStatusRef {
  return V1InstancetypeStatusRefFromJSONTyped(json, false);
}

export function V1InstancetypeStatusRefFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): V1InstancetypeStatusRef {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    controllerRevisionRef: !exists(json, 'controllerRevisionRef')
      ? undefined
      : V1ControllerRevisionRefFromJSON(json['controllerRevisionRef']),
    inferFromVolume: !exists(json, 'inferFromVolume') ? undefined : json['inferFromVolume'],
    inferFromVolumeFailurePolicy: !exists(json, 'inferFromVolumeFailurePolicy')
      ? undefined
      : json['inferFromVolumeFailurePolicy'],
    kind: !exists(json, 'kind') ? undefined : json['kind'],
    name: !exists(json, 'name') ? undefined : json['name'],
  };
}

export function V1InstancetypeStatusRefToJSON(value?: V1InstancetypeStatusRef | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    controllerRevisionRef: V1ControllerRevisionRefToJSON(value.controllerRevisionRef),
    inferFromVolume: value.inferFromVolume,
    inferFromVolumeFailurePolicy: value.inferFromVolumeFailurePolicy,
    kind: value.kind,
    name: value.name,
  };
}
