/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
  IoK8sApiAppsV1ReplicaSetCondition,
  IoK8sApiAppsV1ReplicaSetConditionFromJSON,
  IoK8sApiAppsV1ReplicaSetConditionToJSON,
} from './';

/**
 * ReplicaSetStatus represents the current status of a ReplicaSet.
 * @export
 * @interface IoK8sApiAppsV1ReplicaSetStatus
 */
export interface IoK8sApiAppsV1ReplicaSetStatus {
  /**
   * The number of available non-terminating pods (ready for at least minReadySeconds) for this replica set.
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  availableReplicas?: number;
  /**
   * Represents the latest available observations of a replica set's current state.
   * @type {Array<IoK8sApiAppsV1ReplicaSetCondition>}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  conditions?: Array<IoK8sApiAppsV1ReplicaSetCondition>;
  /**
   * The number of non-terminating pods that have labels matching the labels of the pod template of the replicaset.
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  fullyLabeledReplicas?: number;
  /**
   * ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  observedGeneration?: number;
  /**
   * The number of non-terminating pods targeted by this ReplicaSet with a Ready Condition.
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  readyReplicas?: number;
  /**
   * Replicas is the most recently observed number of non-terminating pods. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  replicas: number;
  /**
   * The number of terminating pods for this replica set. Terminating pods have a non-null .metadata.deletionTimestamp and have not yet reached the Failed or Succeeded .status.phase.
   *
   * This is an alpha field. Enable DeploymentReplicaSetTerminatingReplicas to be able to use this field.
   * @type {number}
   * @memberof IoK8sApiAppsV1ReplicaSetStatus
   */
  terminatingReplicas?: number;
}

export function IoK8sApiAppsV1ReplicaSetStatusFromJSON(json: any): IoK8sApiAppsV1ReplicaSetStatus {
  return IoK8sApiAppsV1ReplicaSetStatusFromJSONTyped(json, false);
}

export function IoK8sApiAppsV1ReplicaSetStatusFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): IoK8sApiAppsV1ReplicaSetStatus {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    availableReplicas: !exists(json, 'availableReplicas') ? undefined : json['availableReplicas'],
    conditions: !exists(json, 'conditions')
      ? undefined
      : (json['conditions'] as Array<any>).map(IoK8sApiAppsV1ReplicaSetConditionFromJSON),
    fullyLabeledReplicas: !exists(json, 'fullyLabeledReplicas')
      ? undefined
      : json['fullyLabeledReplicas'],
    observedGeneration: !exists(json, 'observedGeneration')
      ? undefined
      : json['observedGeneration'],
    readyReplicas: !exists(json, 'readyReplicas') ? undefined : json['readyReplicas'],
    replicas: json['replicas'],
    terminatingReplicas: !exists(json, 'terminatingReplicas')
      ? undefined
      : json['terminatingReplicas'],
  };
}

export function IoK8sApiAppsV1ReplicaSetStatusToJSON(
  value?: IoK8sApiAppsV1ReplicaSetStatus | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    availableReplicas: value.availableReplicas,
    conditions:
      value.conditions === undefined
        ? undefined
        : (value.conditions as Array<any>).map(IoK8sApiAppsV1ReplicaSetConditionToJSON),
    fullyLabeledReplicas: value.fullyLabeledReplicas,
    observedGeneration: value.observedGeneration,
    readyReplicas: value.readyReplicas,
    replicas: value.replicas,
    terminatingReplicas: value.terminatingReplicas,
  };
}
