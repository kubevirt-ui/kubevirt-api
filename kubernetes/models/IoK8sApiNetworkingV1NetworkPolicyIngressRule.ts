/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiNetworkingV1NetworkPolicyPeer,
    IoK8sApiNetworkingV1NetworkPolicyPeerFromJSON,
    IoK8sApiNetworkingV1NetworkPolicyPeerFromJSONTyped,
    IoK8sApiNetworkingV1NetworkPolicyPeerToJSON,
    IoK8sApiNetworkingV1NetworkPolicyPort,
    IoK8sApiNetworkingV1NetworkPolicyPortFromJSON,
    IoK8sApiNetworkingV1NetworkPolicyPortFromJSONTyped,
    IoK8sApiNetworkingV1NetworkPolicyPortToJSON,
} from './';

/**
 * NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
 * @export
 * @interface IoK8sApiNetworkingV1NetworkPolicyIngressRule
 */
export interface IoK8sApiNetworkingV1NetworkPolicyIngressRule {
    /**
     * from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
     * @type {Array<IoK8sApiNetworkingV1NetworkPolicyPeer>}
     * @memberof IoK8sApiNetworkingV1NetworkPolicyIngressRule
     */
    from?: Array<IoK8sApiNetworkingV1NetworkPolicyPeer>;
    /**
     * ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
     * @type {Array<IoK8sApiNetworkingV1NetworkPolicyPort>}
     * @memberof IoK8sApiNetworkingV1NetworkPolicyIngressRule
     */
    ports?: Array<IoK8sApiNetworkingV1NetworkPolicyPort>;
}

export function IoK8sApiNetworkingV1NetworkPolicyIngressRuleFromJSON(json: any): IoK8sApiNetworkingV1NetworkPolicyIngressRule {
    return IoK8sApiNetworkingV1NetworkPolicyIngressRuleFromJSONTyped(json, false);
}

export function IoK8sApiNetworkingV1NetworkPolicyIngressRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiNetworkingV1NetworkPolicyIngressRule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'from': !exists(json, 'from') ? undefined : ((json['from'] as Array<any>).map(IoK8sApiNetworkingV1NetworkPolicyPeerFromJSON)),
        'ports': !exists(json, 'ports') ? undefined : ((json['ports'] as Array<any>).map(IoK8sApiNetworkingV1NetworkPolicyPortFromJSON)),
    };
}

export function IoK8sApiNetworkingV1NetworkPolicyIngressRuleToJSON(value?: IoK8sApiNetworkingV1NetworkPolicyIngressRule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'from': value.from === undefined ? undefined : ((value.from as Array<any>).map(IoK8sApiNetworkingV1NetworkPolicyPeerToJSON)),
        'ports': value.ports === undefined ? undefined : ((value.ports as Array<any>).map(IoK8sApiNetworkingV1NetworkPolicyPortToJSON)),
    };
}

