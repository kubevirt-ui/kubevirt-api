/* tslint:disable */
/* eslint-disable */
/**
 *
 *
 *
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
  V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressions,
  V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsFromJSON,
  V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsFromJSONTyped,
  V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsToJSON,
} from './';

/**
 * A node selector term, associated with the corresponding weight.
 * @export
 * @interface V1NMStateSpecAffinityNodeAffinityPreference
 */
export interface V1NMStateSpecAffinityNodeAffinityPreference {
  /**
   * A list of node selector requirements by node's labels.
   * @type {Array<V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressions>}
   * @memberof V1NMStateSpecAffinityNodeAffinityPreference
   */
  matchExpressions?: Array<V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressions>;
  /**
   * A list of node selector requirements by node's fields.
   * @type {Array<V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressions>}
   * @memberof V1NMStateSpecAffinityNodeAffinityPreference
   */
  matchFields?: Array<V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressions>;
}

export function V1NMStateSpecAffinityNodeAffinityPreferenceFromJSON(
  json: any,
): V1NMStateSpecAffinityNodeAffinityPreference {
  return V1NMStateSpecAffinityNodeAffinityPreferenceFromJSONTyped(json, false);
}

export function V1NMStateSpecAffinityNodeAffinityPreferenceFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): V1NMStateSpecAffinityNodeAffinityPreference {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    matchExpressions: !exists(json, 'matchExpressions')
      ? undefined
      : (json['matchExpressions'] as Array<any>).map(
          V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsFromJSON,
        ),
    matchFields: !exists(json, 'matchFields')
      ? undefined
      : (json['matchFields'] as Array<any>).map(
          V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsFromJSON,
        ),
  };
}

export function V1NMStateSpecAffinityNodeAffinityPreferenceToJSON(
  value?: V1NMStateSpecAffinityNodeAffinityPreference | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    matchExpressions:
      value.matchExpressions === undefined
        ? undefined
        : (value.matchExpressions as Array<any>).map(
            V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsToJSON,
          ),
    matchFields:
      value.matchFields === undefined
        ? undefined
        : (value.matchFields as Array<any>).map(
            V1NMStateSpecAffinityNodeAffinityPreferenceMatchExpressionsToJSON,
          ),
  };
}
