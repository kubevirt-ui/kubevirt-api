/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: unversioned
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import {
  IoK8sApiResourceV1beta1Counter,
  IoK8sApiResourceV1beta1CounterFromJSON,
  IoK8sApiResourceV1beta1CounterToJSON,
} from './';

/**
 * DeviceCounterConsumption defines a set of counters that a device will consume from a CounterSet.
 * @export
 * @interface IoK8sApiResourceV1beta1DeviceCounterConsumption
 */
export interface IoK8sApiResourceV1beta1DeviceCounterConsumption {
  /**
   * CounterSet is the name of the set from which the counters defined will be consumed.
   * @type {string}
   * @memberof IoK8sApiResourceV1beta1DeviceCounterConsumption
   */
  counterSet: string;
  /**
   * Counters defines the counters that will be consumed by the device.
   *
   * The maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).
   * @type {{ [key: string]: IoK8sApiResourceV1beta1Counter; }}
   * @memberof IoK8sApiResourceV1beta1DeviceCounterConsumption
   */
  counters: { [key: string]: IoK8sApiResourceV1beta1Counter };
}

export function IoK8sApiResourceV1beta1DeviceCounterConsumptionFromJSON(
  json: any,
): IoK8sApiResourceV1beta1DeviceCounterConsumption {
  return IoK8sApiResourceV1beta1DeviceCounterConsumptionFromJSONTyped(json, false);
}

export function IoK8sApiResourceV1beta1DeviceCounterConsumptionFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): IoK8sApiResourceV1beta1DeviceCounterConsumption {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    counterSet: json['counterSet'],
    counters: mapValues(json['counters'], IoK8sApiResourceV1beta1CounterFromJSON),
  };
}

export function IoK8sApiResourceV1beta1DeviceCounterConsumptionToJSON(
  value?: IoK8sApiResourceV1beta1DeviceCounterConsumption | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    counterSet: value.counterSet,
    counters: mapValues(value.counters, IoK8sApiResourceV1beta1CounterToJSON),
  };
}
