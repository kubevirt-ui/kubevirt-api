/* tslint:disable */
/* eslint-disable */
/**
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NodeNetworkConfigurationPolicyStatusConditions,
    NodeNetworkConfigurationPolicyStatusConditionsFromJSON,
    NodeNetworkConfigurationPolicyStatusConditionsFromJSONTyped,
    NodeNetworkConfigurationPolicyStatusConditionsToJSON,
} from './';

/**
 * NodeNetworkConfigurationPolicyStatus defines the observed state of NodeNetworkConfigurationPolicy
 * @export
 * @interface NodeNetworkConfigurationPolicyStatus
 */
export interface NodeNetworkConfigurationPolicyStatus {
    /**
     * 
     * @type {Array<NodeNetworkConfigurationPolicyStatusConditions>}
     * @memberof NodeNetworkConfigurationPolicyStatus
     */
    conditions?: Array<NodeNetworkConfigurationPolicyStatusConditions>;
    /**
     * LastUnavailableNodeCountUpdate is time of the last UnavailableNodeCount update
     * @type {string}
     * @memberof NodeNetworkConfigurationPolicyStatus
     */
    lastUnavailableNodeCountUpdate?: string;
    /**
     * UnavailableNodeCount represents the total number of potentially unavailable nodes that are processing a NodeNetworkConfigurationPolicy
     * @type {number}
     * @memberof NodeNetworkConfigurationPolicyStatus
     */
    unavailableNodeCount?: number;
}

export function NodeNetworkConfigurationPolicyStatusFromJSON(json: any): NodeNetworkConfigurationPolicyStatus {
    return NodeNetworkConfigurationPolicyStatusFromJSONTyped(json, false);
}

export function NodeNetworkConfigurationPolicyStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeNetworkConfigurationPolicyStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(NodeNetworkConfigurationPolicyStatusConditionsFromJSON)),
        'lastUnavailableNodeCountUpdate': !exists(json, 'lastUnavailableNodeCountUpdate') ? undefined : (new Date(json['lastUnavailableNodeCountUpdate'])),
        'unavailableNodeCount': !exists(json, 'unavailableNodeCount') ? undefined : json['unavailableNodeCount'],
    };
}

export function NodeNetworkConfigurationPolicyStatusToJSON(value?: NodeNetworkConfigurationPolicyStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(NodeNetworkConfigurationPolicyStatusConditionsToJSON)),
        'lastUnavailableNodeCountUpdate': value.lastUnavailableNodeCountUpdate === undefined ? undefined : (value.lastUnavailableNodeCountUpdate.toISOString()),
        'unavailableNodeCount': value.unavailableNodeCount,
    };
}

